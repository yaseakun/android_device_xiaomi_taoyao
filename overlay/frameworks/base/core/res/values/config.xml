<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2021 The LineageOS Project

     SPDX-License-Identifier: Apache-2.0
-->
<resources>
     <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
     <bool name="config_unplugTurnsOnScreen">true</bool>

     <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
          percent. The length of this array is assumed to be one greater than
          config_ambientThresholdLevels. The brightening threshold is calculated as
          lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
          the screen brightness is recalculated. See the config_ambientThresholdLevels
          description for how the constraint value is chosen. -->
     <integer-array name="config_ambientBrighteningThresholds">
          <item>2</item>
          <item>5</item>
          <item>10</item>
          <item>30</item>
          <item>100</item>
          <item>400</item>
          <item>600</item>
          <item>1000</item>
     </integer-array>

     <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
          percent. The length of this array is assumed to be one greater than
          config_ambientThresholdLevels. The darkening threshold is calculated as
          lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
          the screen brightness is recalculated. See the config_ambientThresholdLevels
          description for how the constraint value is chosen. -->
     <integer-array name="config_ambientDarkeningThresholds">
          <item>800</item>
          <item>800</item>
          <item>500</item>
          <item>500</item>
          <item>500</item>
          <item>500</item>
          <item>500</item>
          <item>500</item>
     </integer-array>

     <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
          values by calculating the index to use for lookup and then setting the constraint value
          to the corresponding value of the array. The new brightening hysteresis constraint value
          is the n-th element of config_ambientBrighteningThresholds, and the new darkening
          hysteresis constraint value is the n-th element of config_ambientDarkeningThresholds.
          The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
          condition                       calculated index
          value < level[0]                0
          level[n] <= value < level[n+1]  n+1
          level[MAX] <= value             MAX+1 -->
     <array name="config_ambientThresholdLevels">
          <item>2</item>
          <item>10</item>
          <item>30</item>
          <item>100</item>
          <item>800</item>
          <item>2000</item>
          <item>4000</item>
     </array>

     <!-- Array of desired screen brightness in nits corresponding to the lux values
          in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
          config_screenBrightnessMaximumNits, the display brightness is defined as the measured
          brightness of an all-white image.
          If this is defined then:
          - config_autoBrightnessLcdBacklightValues should not be defined
          - config_screenBrightnessNits must be defined
          - config_screenBrightnessBacklight must be defined
          This array should have size one greater than the size of the config_autoBrightnessLevels
          array. The brightness values must be non-negative and non-decreasing. This must be
          overridden in platform specific overlays -->
     <array name="config_autoBrightnessDisplayValuesNits">
          <item>3.5</item>
          <item>4.3</item>
          <item>5.0</item>
          <item>17.0</item>
          <item>24.0</item>
          <item>31.0</item>
          <item>34.0</item>
          <item>46.0</item>
          <item>59.0</item>
          <item>76.0</item>
          <item>81.0</item>
          <item>82.0</item>
          <item>82.0</item>
          <item>82.0</item>
          <item>83.0</item>
          <item>83.0</item>
          <item>83.0</item>
          <item>84.0</item>
          <item>84.0</item>
          <item>85.0</item>
          <item>85.0</item>
          <item>85.0</item>
          <item>85.0</item>
          <item>86.0</item>
          <item>86.0</item>
          <item>87.0</item>
          <item>89.0</item>
          <item>90.0</item>
          <item>91.0</item>
          <item>93.0</item>
          <item>94.0</item>
          <item>96.0</item>
          <item>97.0</item>
          <item>99.0</item>
          <item>100.0</item>
          <item>101.0</item>
          <item>104.0</item>
          <item>105.0</item>
          <item>106.0</item>
          <item>108.0</item>
          <item>109.0</item>
          <item>111.0</item>
          <item>112.0</item>
          <item>114.0</item>
          <item>116.0</item>
          <item>137.0</item>
          <item>157.0</item>
          <item>180.0</item>
          <item>205.0</item>
          <item>226.0</item>
          <item>257.0</item>
          <item>280.0</item>
          <item>295.0</item>
          <item>369.0</item>
          <item>400.0</item>
          <item>416.7</item>
          <item>433.3</item>
          <item>450.0</item>
          <item>466.7</item>
          <item>483.3</item>
          <item>500.0</item>
          <item>512.5</item>
          <item>525.0</item>
          <item>537.5</item>
          <item>550.0</item>
          <item>562.5</item>
          <item>575.0</item>
          <item>587.5</item>
          <item>600.0</item>
          <item>610.0</item>
          <item>620.0</item>
          <item>630.0</item>
          <item>640.0</item>
          <item>650.0</item>
          <item>660.0</item>
          <item>670.0</item>
          <item>680.0</item>
          <item>690.0</item>
          <item>700.0</item>
          <item>705.0</item>
          <item>710.0</item>
          <item>715.0</item>
          <item>720.0</item>
          <item>725.0</item>
          <item>730.0</item>
          <item>735.0</item>
          <item>740.0</item>
          <item>745.0</item>
          <item>750.0</item>
          <item>755.0</item>
          <item>760.0</item>
          <item>765.0</item>
          <item>770.0</item>
          <item>775.0</item>
          <item>800.0</item>
          <item>816.7</item>
          <item>833.3</item>
          <item>850.0</item>
          <item>866.7</item>
          <item>883.3</item>
          <item>900.0</item>
          <item>914.3</item>
          <item>928.6</item>
          <item>942.9</item>
          <item>957.1</item>
          <item>971.4</item>
          <item>985.7</item>
          <item>1000.0</item>
     </array>

     <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
          The N entries of this array define N + 1 control points as follows:
          (1-based arrays)
          Point 1:            (0, value[1]):             lux <= 0
          Point 2:     (level[1], value[2]):  0        < lux <= level[1]
          Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
          ...
          Point N+1: (level[N], value[N+1]):  level[N] < lux
          The control points must be strictly increasing.  Each control point
          corresponds to an entry in the brightness backlight values arrays.
          For example, if lux == level[1] (first element of the levels array)
          then the brightness will be determined by value[2] (second element
          of the brightness values array).
          Spline interpolation is used to determine the auto-brightness
          backlight values for lux levels between these control points.
          Must be overridden in platform specific overlays -->
     <array name="config_autoBrightnessLevels">
          <item>1</item>
          <item>2</item>
          <item>5</item>
          <item>9</item>
          <item>13</item>
          <item>17</item>
          <item>21</item>
          <item>26</item>
          <item>30</item>
          <item>40</item>
          <item>83</item>
          <item>104</item>
          <item>200</item>
          <item>400</item>
          <item>500</item>
          <item>600</item>
          <item>700</item>
          <item>800</item>
          <item>1000</item>
          <item>1200</item>
          <item>1500</item>
          <item>1800</item>
          <item>2000</item>
          <item>2165</item>
          <item>2680</item>
          <item>3000</item>
          <item>3540</item>
          <item>4000</item>
     </array>

     <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
          percent. The length of this array is assumed to be one greater than
          config_screenThresholdLevels. The brightening threshold is calculated as
          screenBrightness * (1.0f + CONSTRAINT_VALUE). When the new screen brightness is higher
          than this threshold, it is applied. See the config_screenThresholdLevels description for
          how the constraint value is chosen. -->
     <integer-array name="config_screenBrighteningThresholds">
          <item>0</item>
     </integer-array>

     <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
          percent. The length of this array is assumed to be one greater than
          config_screenThresholdLevels. The darkening threshold is calculated as
          screenBrightness * (1.0f - CONSTRAINT_VALUE). When the new screen brightness is lower than
          this threshold, it is applied. See the config_screenThresholdLevels description for how
          the constraint value is chosen. -->
     <integer-array name="config_screenDarkeningThresholds">
          <item>0</item>
     </integer-array>

     <!-- Array of output values for LCD backlight corresponding to the lux values
          in the config_autoBrightnessLevels array.  This array should have size one greater
          than the size of the config_autoBrightnessLevels array.
          The brightness values must be between 0 and 255 and be non-decreasing.
          This must be overridden in platform specific overlays -->
     <integer-array name="config_autoBrightnessLcdBacklightValues">
          <item>4</item>
          <item>4</item>
          <item>4</item>
          <item>8</item>
          <item>15</item>
          <item>20</item>
          <item>26</item>
          <item>35</item>
          <item>45</item>
          <item>46</item>
          <item>46</item>
          <item>46</item>
          <item>60</item>
          <item>60</item>
          <item>60</item>
          <item>64</item>
          <item>66</item>
          <item>70</item>
          <item>73</item>
          <item>80</item>
          <item>88</item>
          <item>110</item>
          <item>130</item>
          <item>135</item>
          <item>145</item>
          <item>180</item>
          <item>200</item>
          <item>240</item>
          <item>255</item>
     </integer-array>

     <integer-array name="config_dynamicHysteresisBrightLevels">
          <item>2000</item>
          <item>2000</item>
          <item>1000</item>
          <item>1000</item>
          <item>500</item>
          <item>500</item>
          <item>500</item>
          <item>500</item>
     </integer-array>

     <integer-array name="config_dynamicHysteresisDarkLevels">
          <item>800</item>
          <item>800</item>
          <item>800</item>
          <item>800</item>
          <item>800</item>
          <item>500</item>
          <item>500</item>
          <item>500</item>
     </integer-array>

     <integer-array name="config_dynamicHysteresisLuxLevels">
          <item>2</item>
          <item>10</item>
          <item>30</item>
          <item>100</item>
          <item>800</item>
          <item>2000</item>
          <item>4000</item>
     </integer-array>

     <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
          for debouncing the light sensor.  Different constants are used to debounce the light sensor
          when adapting to brighter or darker environments.  This parameter controls how quickly
          brightness changes occur in response to an observed change in light level that exceeds the
          hysteresis threshold. -->
     <integer name="config_autoBrightnessBrighteningLightDebounce">1000</integer>
     <integer name="config_autoBrightnessDarkeningLightDebounce">1000</integer>

     <!-- Fast brightness animation ramp rate in brightness units per second-->
     <integer name="config_brightness_ramp_rate_fast">180</integer>

     <!-- Slow brightness animation ramp rate in brightness units per second-->
     <integer name="config_brightness_ramp_rate_slow">60</integer>

     <!-- The maximum range of gamma adjustment possible using the screen
          auto-brightness adjustment setting. -->
     <fraction name="config_autoBrightnessAdjustmentMaxGamma">300.0%</fraction>

     <!-- Screen brightness used to dim the screen when the user activity
          timeout expires.  May be less than the minimum allowed brightness setting
          that can be set by the user. -->
     <integer name="config_screenBrightnessDim">1</integer>
     <item type="dimen" name="config_screenBrightnessDimFloat">-2.0</item>

     <!-- The bounding path of the cutout region of the main built-in display.
          Must either be empty if there is no cutout region, or a string that is parsable by
          {@link android.util.PathParser}.
          The path is assumed to be specified in display coordinates with pixel units and in
          the display's native orientation, with the origin of the coordinate system at the
          center top of the display.
          To facilitate writing device-independent emulation overlays, the marker `@dp` can be
          appended after the path string to interpret coordinates in dp instead of px units.
          Note that a physical cutout should be configured in pixels for the best results.
          Example for a 10px x 10px square top-center cutout:
          <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
          Example for a 10dp x 10dp square top-center cutout:
          <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>
          @see https://www.w3.org/TR/SVG/paths.html#PathData -->
     <string translatable="false" name="config_mainBuiltInDisplayCutout">
          M -60,0 L -60,120 L 60,120 L 60,0 Z
     </string>

     <!-- Whether the display cutout region of the main built-in display should be forced to
          black in software (to avoid aliasing or emulate a cutout that is not physically existent). -->
     <bool name="config_fillMainBuiltInDisplayCutout">false</bool>

     <!-- The default peak refresh rate. -->
     <integer name="config_defaultPeakRefreshRate">90</integer>

     <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
     <integer name="config_shutdownBatteryTemperature">580</integer>

     <bool name="config_wifi_wap3_sap_mode_enabled">true</bool>

     <!-- Note: This setting is deprecated, please use
          config_screenBrightnessSettingDefaultFloat instead -->
     <integer name="config_screenBrightnessSettingDefault">67</integer>

     <!-- Note: This setting is deprecated, please use
          config_screenBrightnessSettingMinimumFloat instead -->
     <integer name="config_screenBrightnessSettingMinimum">1</integer>

     <!-- Note: This config is deprecated, use BluetoothProperties instead.
          Idle current for bluetooth controller. 0 by default -->
     <integer name="config_bluetooth_idle_cur_ma">6</integer>

     <!-- Note: This config is deprecated, use BluetoothProperties instead.
          Operating volatage for bluetooth controller. 0 by default -->
     <integer name="config_bluetooth_operating_voltage_mv">3700</integer>

     <!-- Note: This config is deprecated, use BluetoothProperties instead.
          Rx current for bluetooth controller. 0 by default -->
     <integer name="config_bluetooth_rx_cur_ma">28</integer>

     <!-- Note: This config is deprecated, use BluetoothProperties instead.
          Tx current for bluetooth controller. 0 by default -->
     <integer name="config_bluetooth_tx_cur_ma">36</integer>
</resources>